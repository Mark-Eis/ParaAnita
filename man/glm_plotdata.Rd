% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot-model.R
\name{glm_plotdata}
\alias{glm_plotdata}
\alias{glm_plotdata.binom_contingency}
\alias{glm_plotdata.data.frame}
\alias{glm_plotdata.formula}
\alias{glm_plotdata.glm}
\title{Collate Data for Plotting Univariable GLM Predictions with Error Bars}
\usage{
glm_plotdata(object, ...)

\method{glm_plotdata}{binom_contingency}(
  object,
  .ind_var,
  ...,
  .ungroup = NULL,
  conf_level = 0.95,
  type = c("link", "response")
)

\method{glm_plotdata}{data.frame}(
  object,
  .dep_var,
  .ind_var,
  ...,
  .ungroup = NULL,
  conf_level = 0.95,
  type = c("link", "response")
)

\method{glm_plotdata}{formula}(
  object,
  ...,
  .family = binomial,
  .data,
  .ungroup = NULL,
  conf_level = 0.95,
  type = c("link", "response")
)

\method{glm_plotdata}{glm}(object, ..., conf_level = 0.95, type = c("link", "response"))
}
\arguments{
\item{object}{an object from which the plot data are to be calculated, which may be a \code{\link{binom_contingency}} table,
a \code{\link[base:data.frame]{data frame}} (or a data frame extension e.g., a \code{\link[tibble:tibble-package]{tibble}}), a
\code{\link[stats:formula]{formula}} or a \code{\link[stats:glm]{glm}}.}

\item{...}{further arguments passed to or from other methods.}

\item{.ind_var}{<\code{\link[rlang:args_data_masking]{data-masking}}> quoted name of an independent variable, which may be
either a character vector or factor.}

\item{.ungroup}{<\code{\link[rlang:args_data_masking]{data-masking}}> quoted name of the column containing the ungrouped
levels of \code{.ind_var}, see details; default \code{NULL}.}

\item{conf_level}{the confidence level required for the error bars; default \var{0.95}. If \code{NA}, error bars are
standard error.}

\item{type}{the type of prediction required. The default is on the scale of the linear predictors;
the alternative \code{"response"} is on the scale of the response variable; default \code{"link"}.}

\item{.dep_var}{<\code{\link[rlang:args_data_masking]{data-masking}}> quoted name of the response variable
in the data, either as a \verb{numeric vector} with values of \code{1} and \code{0}, representing success or
failure respectively, or as a two-column \code{matrix} with the columns giving the numbers of
successes and failures see \code{\link[stats:glm]{glm()}}.}

\item{.family}{a description of the error distribution and link function to be used in the model.
This can be a character string naming a family function, a family function or the result of a
call to a family function. (See \code{\link[stats:family]{family}} for details of family functions.)}

\item{.data}{a data frame, or a data frame extension (e.g. a \code{\link[tibble:tibble-package]{tibble}}).}
}
\value{
An object of class \code{"glm_plotdata"}, \code{"announce"}, inheriting from \code{\link[tibble:tibble-package]{tibble}},
with values on the linear predictor or response scale (depending on \code{type}) in columns as follows: -

\item{level}{Level of the independent variable.}

\item{grouped}{Grouped levels of the independent variable (or \code{NA} if ungrouped).}

\item{n}{Number of observations.}

\item{obs}{Observed values.}

\item{pred}{Values predicted by the model.}

\item{lower}{Lower extent of error bar.}

\item{upper}{Upper extent of error bar.}

It also has attributes \code{"conf_level"}, signifying the confidence level, \code{"ind_var"}, the name of the
independent variable, and \code{"type"} (see argument \code{type}).
}
\description{
\code{glm_plotdata()} outputs data based on predictions from univariable general linear models (\acronym{GLM}s) suitably
collated for easy creation of standardised plots with error bars representing confidence intervals or standard
errors.
}
\details{
This function works with univariable binomial \acronym{GLM}s having a \code{numeric} dependent variable of ones and zeros
representing numbers of successes and failures, or a two-column \code{matrix} with the columns giving the numbers of
successes and failures, see \code{\link[stats:glm]{glm()}}, and an independent variable with multiple levels. Its output may
be plotted conveniently using \code{\link[ggplot2:ggplot]{ggplot()}} in package \pkg{\link[ggplot2]{ggplot2}};
\pkg{\link[ParaAnita]{ParaAnita}} provides a suitable S3 method \code{\link[=ggplot.glm_plotdata]{ggplot.glm_plotdata()}} for
this purpose.

\code{glm_plotdata()} allows exploration of proposed groupings of the levels of the independent variable, such as
obtained using \code{\link[=add_grps]{add_grps()}} or \code{\link[forcats:fct_collapse]{fct_collapse()}}, and will include both the
grouped and ungrouped levels in its output. In such cases, \code{.ind_var} should contain the groupings and the \code{.ungroup}
argument should name a column in \code{object}'s data containing the ungrouped levels, see examples. The grouped levels
are used as the independent variable in the \acronym{GLM} and are shown within the output object in the column
\code{grouped} while the ungrouped levels are shown in the column \code{level}. If the \code{.ungroup} is \code{NULL} (the default),
levels of \code{.ind_var} will appear in the column \code{level} and the \code{grouped} column in the output will contain
\code{\link[base:NA]{NA}}.

If \code{conf_level} is \code{0.95} (the default) or a similar value, the \code{lower} and \code{upper} columns in the output delimit
the prediction intervals at that confidence level. If \code{conf_level} is \code{\link[base:NA]{NA}}, then \code{lower} and \code{upper}
are the model predictions ±standard error.

If \code{type = "link"}, then the linear predictors and their confidence intervals or ±standard errors are obtained.
If \code{type = "response"}, then the linear predictors and their confidence intervals or ±standard errors are
transformed back to the response scale using the link inverse function.
}
\note{
Confidence intervals are calculated from the standard errors of the parameter estimates using the quantiles of
the t distribution with \emph{n - 1} degrees of freedom, at the probability given by \code{conf_level}. These
confidence intervals are generally more conservative i.e., a little wider, than those obtained by "profiling"
(e.g., using \code{\link[MASS:confint]{confint.glm}}). If the \code{conf_level} argument is \code{\link[base:NA]{NA}}, standard
error is shown rather than a confidence interval.

If \code{object} is a \code{\link{binom_contingency}} table it should be "univariable" i.e., having only one row for each level of
\code{.ind_var}, otherwise the output of \code{glm_plotdata()} will be undefined.
}
\examples{
(d <- binom_data())

## ___________________________________________________
## Ungrouped data, 95\% Confidence interval (default)

## On linear predictor scale (default)
d |> glm_plotdata(cbind(pn, qn), iv)

## On response scale
d |> glm_plotdata(cbind(pn, qn), iv, type = "response")

## ________________________________
## Ungrouped data, standard error

## On linear predictor scale (default)
d |> glm_plotdata(cbind(pn, qn), iv, conf_level = NA)

## On response scale
d |> glm_plotdata(cbind(pn, qn), iv, conf_level = NA, type = "response")

(d <- list(iv2 = list(ab = c("a", "b"), cd = c("c", "d"))) |>
    add_grps(d, iv, .key = _))

## _________________________________________________
## Grouped data, 95\% Confidence interval (default)

## On linear predictor scale (default)
d |> glm_plotdata(cbind(pn, qn), iv2, .ungroup = iv)

## On response scale
d |> glm_plotdata(cbind(pn, qn), iv2, .ungroup = iv, type = "response")

## ______________________________
## Grouped data, standard error

## On linear predictor scale (default)
d |> glm_plotdata(cbind(pn, qn), iv2, .ungroup = iv, conf_level = NA)

## On response scale
d |> glm_plotdata(
        cbind(pn, qn), iv2,
        .ungroup = iv, conf_level = NA, type = "response"
     )

rm(d)
}
\seealso{
\code{\link{add_grps}}, \code{\link{binom_contingency}}, \code{\link[stats:formula]{formula}},
\code{\link[stats:glm]{glm}}, and  \code{\link[tibble:tibble-package]{tibble}}.

Other plot_model: 
\code{\link{Plot_Model}},
\code{\link{glm_plotlist}()},
\code{\link{var_labs}()}
}
\concept{plot_model}
\keyword{dplot}
