% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/print-all.R
\name{print_all}
\alias{print_all}
\alias{print_all.data.frame}
\alias{print_all.tbl}
\alias{print_all.tbl_df}
\alias{print_all.htest}
\title{Print All (or More) of an Object}
\usage{
print_all(x, ...)

\method{print_all}{data.frame}(
  x,
  linefeeds = NULL,
  digits = NULL,
  quote = FALSE,
  right = TRUE,
  row.names = TRUE,
  max = NULL
)

\method{print_all}{tbl}(
  x,
  linefeeds = NULL,
  width = NULL,
  ...,
  max_extra_cols = NULL,
  max_footer_lines = NULL
)

\method{print_all}{tbl_df}(
  x,
  linefeeds = NULL,
  width = NULL,
  ...,
  max_extra_cols = NULL,
  max_footer_lines = NULL
)

\method{print_all}{htest}(x, ...)
}
\arguments{
\item{x}{An object such as a \code{\link[tibble:tibble-package]{tibble}} data frame.}

\item{...}{further arguments passed to or from other methods.}

\item{linefeeds}{A positive integer specifying the number of linefeeds to follow up the printed output; default
\code{NULL}.}

\item{digits}{minimal number of \emph{significant} digits, see
    \code{\link[base]{print.default}}.}

\item{quote}{logical, indicating whether or not strings should be
    printed with surrounding quotes.}

\item{right}{logical, indicating whether or not strings should be
    right aligned.}

\item{width}{only used when \code{max.levels} is NULL, see above.}

\item{max_extra_cols}{Number of extra columns to print abbreviated information for,
if the width is too small for the entire tibble. If \code{NULL},
the \code{max_extra_cols} \link[pillar:pillar_options]{option} is used.
The previously defined \code{n_extra} argument is soft-deprecated.}

\item{max_footer_lines}{Maximum number of footer lines. If \code{NULL},
the \code{max_footer_lines} \link[pillar:pillar_options]{option} is used.}
}
\value{
Invisibly returns its argument.
}
\description{
\code{print_all()} is a generic function for extended printing of an object, for instance printing all rows of a tibble,
a derived class or even a regular data frame, optionally following up by printing a specified number of linefeeds.
Being a generic function, new printing methods can be easily added for a new \code{\link[base:class]{class}}.
}
\details{
For a \code{\link[tibble:tibble-package]{tibble}} \code{x}, \code{print_all(x)} is equivalent to
\code{print(x, n = nrow(x))}, followed up if required by \var{n} linefeeds generated as if by using
\code{cat(rep("\n", n))}.

The \code{linefeeds} argument may be useful within a piped sequence to separate output from subsequent printing. If
a vector of \code{length > 1} is entered for \code{linefeeds}, only the first element will be used, and negative
integers will be converted to zero i.e., no line feeds.
}
\examples{
(tib <- tibble(x = 1:26, y = LETTERS[x], z = paste0(x, y)))
tib |> print_all()
tib |> print_all() |> names()
tib |> print_all(linefeeds = 3) |> names()

df <- tib |> as.data.frame()
df |> print_all()                         ## Does nothing more than regular print()
df |> print_all(linefeeds = 2) |> names() ## Regular data frame printing, with line feeds

rm(df, tib)
}
\seealso{
\code{\link[base:print]{print()}}, \code{\link[=print_lf]{print_lf()}}, \code{\link[tibble:tibble-package]{tibble}}.

Other print: 
\code{\link{Print_Methods}},
\code{\link{announce}()},
\code{\link{lf}()}
}
\concept{print}
\keyword{print}
