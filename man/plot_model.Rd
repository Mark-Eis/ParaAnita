% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot-model.R
\name{Plot_Model}
\alias{Plot_Model}
\alias{ggplot.glm_plotdata}
\title{Plot Model Predictions with Error Bars for Univariable GLM}
\usage{
\method{ggplot}{glm_plotdata}(
  data = NULL,
  mapping = aes(),
  as_percent = FALSE,
  rev_y = FALSE,
  ...,
  environment = parent.frame()
)
}
\arguments{
\item{data}{a data frame, or a data frame extension (e.g. a \code{\link[tibble:tibble-package]{tibble}}).}

\item{mapping}{Default list of aesthetic mappings to use for plot.
If not specified, must be supplied in each layer added to the plot.}

\item{as_percent}{\code{logical}. If \code{TRUE}, the y-axis uses a percentage scale; default \code{FALSE}.}

\item{rev_y}{\code{logical}. If \code{TRUE}, the direction of the y-axis is reversed, which may be useful
when plotting linear predictors; default \code{FALSE}.}

\item{...}{further arguments passed to or from other methods.}

\item{environment}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}} Used prior to tidy
evaluation.}
}
\value{
A \code{\link[ggplot2:ggplot]{ggplot}} object.
}
\description{
S3 method to enable \code{\link[ggplot2:ggplot]{ggplot()}} in package \pkg{\link[ggplot2]{ggplot2}} to plot \code{"glm_plotdata"}
objects ouptut by \code{\link[=glm_plotdata]{glm_plotdata()}}.
}
\details{
This S3 method plots model predictions and error bars representing confidence intervals or standard errors for a
univariable glm with a categorical independent variable, optionally allowing representation of groupings of levels of
the independent variable and faceting of a number of such plots.

\code{ggplot.glm_plotdata()} recognises a \code{factor} or \code{character} column in \code{data} named \code{grouped} for plotting grouped
levels of an independent variable that are grouped within the underlying model. If levels are indeed grouped in the
model, the data bars will be plotted with colour-coded borders representing the groups, and the ungrouped observed
values contained in the \code{data} column \code{level} are plotted as symbols. If ungrouped levels are to be plotted, the
\code{grouped} column should only contain \code{\link[base:NA]{NA}} values

A \code{character} column in \code{data} containing names of independent variables to be used for faceting may be identified by
setting an attribute \code{"facet_by"} in \code{data}. Names of variables to be used for faceting may be converted to more
informative facet labels by using a user-defined, vectorised \code{\link[ggplot2:labeller]{labeller()}} function which should
be named \code{\link[=var_labs]{var_labs()}}, see \code{labeller} under \code{\link[ggplot2:facet_wrap]{facet_wrap()}}.

If an individual plot, rather than a faceted plot, is printed, the name of the independent variable, converted by
\code{var_labs()} (if provided), will be used  for the plot title. The plot title, subtitle and axis labels may be
overridden using the usual \code{\link[ggplot2:ggplot]{ggplot()}} syntax, see examples.
}
\examples{
## Example uses randomly generated data; re-running may be worthwhile.  

oldtheme <- theme_get()   ## Save ggplot defaults for later restoration

## Set ggplot defaults for pretty printing
theme_update(
  plot.title = element_text(color = "black", size = 20, hjust = 0.5),
  plot.subtitle = element_text(color = "black", size = 18, hjust = 0.5),
  axis.text.x = element_text(color = "black", size = 15),
  axis.text.y = element_text(color = "black", size = 15),
  axis.title.x = element_text(color = "black", size = 15),
  axis.title.y = element_text(color = "black", size = 15),
  strip.text.x = element_text(color = "black", size = 15),
  legend.position = "none"
)

## "labeller()" function to provide plot titles - see var_labs()
var_labs <- as_labeller(
    c(iv = "Risk Factor (Ungrouped Levels)",
      iv2 = "Risk Factor (Grouped Levels)")
)

## Create binomial data with groupings
(d <- list(iv2 = list(ab = c("a", "b"), cd = c("c", "d"))) |>
    add_grps(binom_data(), iv, .key = _))

## Ungrouped GLM plot data on linear predictor scale
(dp <- glm_plotdata(d, .dep_var = cbind(pn, qn), .ind_var = iv))

## Plot model predictions and CI error bars
dp |> ggplot()

## Plot model predictions and CI error bars with reversed y-axis
dp |> ggplot(rev_y = TRUE)

## Grouped GLM plot data on linear predictor scale
(dp <- glm_plotdata(d, .dep_var = cbind(pn, qn), .ind_var = iv2, .ungroup = iv))

## Plot model predictions and CI error bars with reversed y-axis
dp |> ggplot(rev_y = TRUE)

## Ungrouped GLM plot data on reponse scale
(dp <- glm_plotdata(d, .dep_var = cbind(pn, qn), .ind_var = iv, type = "response"))

## Plot model predictions and CI error bars
dp |> ggplot()

## Plot model predictions and CI error bars, with y-axis as percentage
dp |> ggplot(as_percent = TRUE)

## Grouped GLM plot data on reponse scale
(dp <- glm_plotdata(d, .dep_var = cbind(pn, qn), .ind_var = iv2, .ungroup = iv, type = "response"))

## Plot model predictions and CI error bars
dp |> ggplot(as_percent = TRUE)

## Grouped GLM plot data on reponse scale with standard errors 
(dp <- glm_plotdata(
                    d, .dep_var = cbind(pn, qn), .ind_var = iv2,
                    .ungroup = iv, conf_level = NA, type = "response"
                   ))

## Plot model predictions and standard error bars
dp |> ggplot(as_percent = TRUE)

## Add x-axis label and bespoke titles
dp |> ggplot(as_percent = TRUE) +
labs(
    x = "Level",
    title = "Example for ggplot.glm_plotdata()",
    subtitle = "Fascinating Results"
)

theme_set(oldtheme)    ## Restore original ggplot defaults
rm(d, dp, oldtheme)
}
\seealso{
\code{\link[ggplot2:facet_wrap]{facet_wrap()}}, \code{\link[ggplot2:ggplot]{ggplot()}}, \code{\link[ggplot2:labeller]{labeller()}}.

Other plot_model: 
\code{\link{glm_plotdata}()},
\code{\link{glm_plotlist}()},
\code{\link{var_labs}()}
}
\concept{plot_model}
\keyword{hplot}
