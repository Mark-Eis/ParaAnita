% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot-model.R
\name{Plot_Model}
\alias{Plot_Model}
\alias{ggplot.glm_plotdata}
\title{Plot Model Predictions with Error Bars for Univariable GLM}
\usage{
\method{ggplot}{glm_plotdata}(
  data = NULL,
  mapping = aes(),
  as_percent = FALSE,
  rev_y = FALSE,
  ...,
  environment = parent.frame()
)
}
\arguments{
\item{data}{Default dataset to use for plot. If not already a data.frame,
will be converted to one by \code{\link[ggplot2:fortify]{fortify()}}. If not specified,
must be supplied in each layer added to the plot.}

\item{mapping}{Default list of aesthetic mappings to use for plot.
If not specified, must be supplied in each layer added to the plot.}

\item{as_percent}{\code{logical}. If \code{TRUE}, the y-axis uses a percentage scale; default \code{FALSE}.}

\item{rev_y}{\code{logical}. If \code{TRUE}, the direction of the y-axis is reversed, which may be useful
when plotting linear predictors; default \code{FALSE}.}

\item{...}{further arguments passed to or from other methods.}

\item{environment}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}} Used prior to tidy
evaluation.}
}
\value{
A \code{\link[ggplot2:ggplot]{ggplot}} object.
}
\description{
S3 method to enable \code{\link[ggplot2:ggplot]{ggplot()}} in package \pkg{\link[ggplot2]{ggplot2}} to plot \code{"glm_plotdata"}
objects ouptut by \code{\link[=glm_plotdata]{glm_plotdata()}}.
}
\details{
This S3 method plots model predictions and error bars representing confidence intervals or standard errors for a
univariable glm with a categorical independent variable, optionally allowing representation of groupings of levels of
the independent variable and faceting of a number of such plots.

\code{ggplot.glm_plotdata()} recognises a \code{factor} or character column in \code{data} named \code{grouped} for plotting grouped
levels of an independent variable that are grouped within the underlying model. If levels are indeed grouped in the
model, the data bars will be plotted with colour-coded borders representing the groups, and the ungrouped observed
values contained in the \code{data} column \code{level} are plotted as symbols. If ungrouped levels are to be plotted, the
\code{grouped} column should only contain \code{\link[base:NA]{NA}} values

A \code{character} column in \code{data} containing names of independent variables to be used for faceting may be identified by
setting an attribute \code{"facet_by"} in \code{data}. Names of variables to be used for faceting may be converted to more
informative facet labels for using a vectorised \code{\link[ggplot2:labeller]{labeller()}} function, see \code{labeller} under
\code{\link[ggplot2:facet_wrap]{facet_wrap()}}.
}
\examples{
## Example uses randomly generated data; re-running may be worthwhile.  

oldtheme <- theme_get()   ## Save ggplot defaults for later restoration

## Set ggplot defaults for pretty printing
theme_update(
  plot.title = element_text(color = "black", size = 20, hjust = 0.5),
  plot.subtitle = element_text(color = "black", size = 18, hjust = 0.5),
  axis.text.x = element_text(color = "black", size = 15),
  axis.text.y = element_text(color = "black", size = 15),
  axis.title.x = element_text(color = "black", size = 15),
  axis.title.y = element_text(color = "black", size = 15),
  strip.text.x = element_text(color = "black", size = 15),
  legend.position = "none"
)

## Create binomial data with groupings
(d <- list(iv2 = list(ab = c("a", "b"), cd = c("c", "d"))) |>
    add_grps(binom_data(), iv, .key = _))

## Set plot title and axis labels
plabs<- labs(
  x = "Level",
  y = "Linear predictor scale (logit)",
  title = "Example for ggplot.glm_plotdata()"
)

## Tweak to improve plot subtitles - see var_labs()
var_labs <- as_labeller(toupper)

## Ungrouped plot data on GLM linear predictor scale
(dp <- glm_plotdata(d, .ind_var = iv))

## Plot model predictions and error bars with reversed y-axis
dp |> ggplot(rev_y = T) + plabs

## Grouped plot data on GLM linear predictor scale
(dp <- glm_plotdata(d, .ind_var = iv2, .ungroup = iv))

## Plot model predictions and error bars with reversed y-axis
dp |> ggplot(rev_y = T) + plabs

## Revise y-axis title
plabs$y <- "Proportion Positive (\%)"

## Ungrouped plot data on GLM reponse scale
(dp <- glm_plotdata(d, .ind_var = iv, type = "response"))

## Plot model predictions and error bars
dp |> ggplot(as_percent = T) + plabs

## Grouped plot data on GLM reponse scale
(dp <- glm_plotdata(d, .ind_var = iv2, .ungroup = iv, type = "response"))

## Plot model predictions and error bars
dp |> ggplot(as_percent = T) + plabs

## Override default subtitle
plabs$subtitle <- "Fascinating Results"
dp |> ggplot(as_percent = T) + plabs

theme_set(oldtheme)    ## Restore original ggplot defaults
rm(d, dp, oldtheme, plabs)
}
\seealso{
\code{\link[ggplot2:facet_wrap]{facet_wrap()}}, \code{\link[ggplot2:ggplot]{ggplot}}, \code{\link[ggplot2:labeller]{labeller()}}.

Other plot_model: 
\code{\link{glm_plotdata}()},
\code{\link{glm_plotlist}()},
\code{\link{var_labs}()}
}
\concept{plot_model}
\keyword{hplot}
