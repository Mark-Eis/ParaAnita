% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/set-contrasts.R
\name{get_contrasts}
\alias{get_contrasts}
\alias{set_contrasts}
\alias{set_contrasts<-}
\title{Get and Set Contrasts Matrix for an Independent Variable in Data}
\usage{
get_contrasts(data, .f)

set_contrasts(data, .f, how.many = NULL, ..., contr)

set_contrasts(data, .f, how.many = NULL, ...) <- value
}
\arguments{
\item{data}{a data frame, or a data frame extension (e.g. a \code{\link[tibble:tibble-package]{tibble}}).}

\item{.f}{<\code{\link[rlang:args_data_masking]{data-masking}}> quoted name of a \code{factor} in \code{data}.}

\item{how.many}{the number of contrasts to set, by default one less
    than \code{nlevels(object)}.}

\item{...}{additional arguments for the function \code{contr}.}

\item{contr}{which contrasts to use. Can be a matrix with one row for
    each level of the factor or a suitable function like
    \code{contr.poly} or a character string giving the name of the function}

\item{value}{either a numeric matrix (or a sparse or dense matrix of a
    class extending \code{\link[Matrix:dMatrix-class]{dMatrix}} from
    package \href{https://CRAN.R-project.org/package=Matrix}{\pkg{Matrix}})  whose columns give coefficients for
    contrasts in the levels of \code{x}, or (the quoted name of) a
    function which computes such matrices.}
}
\value{
A dataframe or \code{\link[tibble:tibble-package]{tibble}} with the \code{"contrasts"} attribute set for \code{.f}.
}
\description{
\code{get_contrasts()} returns the \code{"contrasts"} attribute a selected factor within a data frame.

\code{set_contrasts()} sets the \code{"contrasts"} attribute for a selected factor within a data frame;

\code{set_contrasts()<-} is the replacement function form.
}
\details{
The \code{"contrasts"} attribute of \code{.f} may be set using either a numeric matrix or (the quoted name of) a
function which computes such matrices, supplied to \code{set_contrasts()} using the \code{contr} argument or the
\code{value} argument in the case of the replacement function form \code{set_contrasts()<-}. A suitable contrast
matrix may be obtained using a contrast function such as \code{\link[stats:contrast]{contr.helmert}},
\code{\link[stats:contrast]{contr.poly}}, \code{\link[stats:contrast]{contr.sum}}, \code{\link[stats:contrast]{contr.treatment}} or
\code{\link[stats:contrast]{contr.SAS}}, or the (quoted) name of the function itself may be supplied. Additional arguments,
such as \code{base = }\var{x}, may be supplied to a contrast function using the \code{\dots} argument of
\code{set_contrasts()} or \code{set_contrasts()<-}.

If a \code{base} argument is supplied when \code{contr = contr.treatment}, its value is capped to be no greater than
\code{nlevels(.f)}, hence it can be specified as a large integer (e.g., \var{99L}) to ensure the last level is the
reference level. This may be convenient when using \code{set_contrasts()} programmatically.

If \code{NULL} is supplied as the \code{contr} or \code{value} argument, any existing \code{"contrasts"}
attribute will be removed from \code{.f}.
}
\examples{
## Create data frame with a factor iv
(d <- binom_data())

## set_contrasts()
d |> set_contrasts(iv, contr = contr.helmert) |> get_contrasts(iv)
d |> set_contrasts(iv, contr = contr.poly) |> get_contrasts(iv)
d |> set_contrasts(iv, contr = contr.sum) |> get_contrasts(iv)
d |> set_contrasts(iv, contr = contr.treatment) |> get_contrasts(iv)
d |> set_contrasts(iv, contr = contr.SAS) |> get_contrasts(iv)

## how.many argument
d |> set_contrasts(iv, 3, contr = contr.poly) |> get_contrasts(iv)

## base argument of contr.treatment
d |> set_contrasts(iv, base = 1, contr = contr.treatment) |> get_contrasts(iv)
d |> set_contrasts(iv, base = 3, contr = contr.treatment) |> get_contrasts(iv)

## base argument of contr.treatment limited to nlevels(d$iv) 
d |> set_contrasts(iv, base = 99L, contr = contr.treatment) |> get_contrasts(iv)

## Remove "contrasts" attribute using NULL
d |> set_contrasts(iv, contr = NULL) |> get_contrasts(iv)

## set_contrasts()<- replacement form
set_contrasts(d, iv) <- contr.helmert
d |> get_contrasts(iv)

set_contrasts(d, iv) <- contr.poly
d |> get_contrasts(iv)

set_contrasts(d, iv) <- contr.sum
d |> get_contrasts(iv)

set_contrasts(d, iv) <- contr.treatment
d |> get_contrasts(iv)

set_contrasts(d, iv) <- contr.SAS
d |> get_contrasts(iv)

## how.many argument
set_contrasts(d, iv, 3) <- contr.poly
d |> get_contrasts(iv)

## base argument of contr.treatment
set_contrasts(d, iv, base = 2) <- contr.treatment
d |> get_contrasts(iv)

set_contrasts(d, iv, base = 4) <- contr.treatment
d |> get_contrasts(iv)

## base argument of contr.treatment limited to nlevels(d$iv) 
set_contrasts(d, iv, base = 99L) <- contr.treatment
d |> get_contrasts(iv)

rm(d)
}
\seealso{
\code{\link[stats:contrast]{contrast}}, \code{\link[stats:contrasts]{contrasts}}, \code{\link[stats:zC]{C}},
\code{\link[stats:contrast]{contr.helmert}}, \code{\link[stats:contrast]{contr.poly}}, \code{\link[stats:contrast]{contr.sum}},
\code{\link[stats:contrast]{contr.treatment}} or \code{\link[stats:contrast]{contr.SAS}}.

Other get-contrasts: 
\code{\link{get_contr_data}()}
}
\concept{get-contrasts}
\keyword{array}
\keyword{design}
\keyword{regression}
